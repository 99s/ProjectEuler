using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Euler_Project
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Problem Number? ");
            try
            {
                int _x = Convert.ToInt32(Console.ReadLine());
                RunCode(_x);
            }
            catch (System.Exception _e)
            {
                Console.WriteLine("Error" + _e.ToString());
            }
        }


        static void RunCode(int _i)
        {
            switch (_i)
            {
                case 1:
                    One _o = new One();
                    break;
                case 2:
                    Two _t = new Two();
                    break;
                case 3:
                    Three _th = new Three();
                    break;
                case 4:
                    Four _f = new Four();
                    break;
                case 5:
                    Five _fi = new Five();
                    break;
                case 6:
                    Six _s = new Six();
                    break;
                case 7:
                    Seven _se = new Seven();
                    break;
            }
        }

    }

    //If we list all the natural numbers below 10 that are multiples of 3 or 5,
    //we get 3, 5, 6 and 9. The sum of these multiples is 23.
    //Find the sum of all the multiples of 3 or 5 below 1000.

    class One
    {

        public One()
        {
            int _res = 0;

            for (int i = 1; i < 1000; i++)
            {
                if (i % 3 == 0 && i % 5 == 0)
                {
                    _res += i;
                }
               

            }
            System.Console.WriteLine("Addition is = " + _res); //33165
            Console.ReadLine();
        }

    }

    /*Each new term in the Fibonacci sequence is generated by adding the
    previous two terms. By starting with 1 and 2, the first 10 terms will be:

                     1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not
    exceed four million, find the sum of the even-valued terms. */



    class Two
    {
        public Two()
        {
            int A = 1,
            X = 2,
            S = 0;

            while (A < 40000000)
            {
                A = A + X;
                X = X + A;
                Console.WriteLine("A=" + A + " X=" + X);
                if (X % 2 == 0)
                {
                    S += X;
                }
            }

            Console.WriteLine(String.Format("Sum = {0}", S));
            Console.ReadLine(); //66978572
        }

    }

    /*
     The prime factors of 13195 are 5, 7, 13 and 29.

     What is the largest prime factor of the number 600851475143 ?
     */
    class Three
    {
        public Three()
        {
            long _num = 600851475143,
            _res = 0;


            for (long i = 1; i <= (_num / 2); i++)
            {
                if (i % _num == 0 && i != 0)
                {
                    _res = i;
                }
            }
            Console.WriteLine(String.Format("Largest prime Factor of {0} is {1}", _num, _res));
            Console.ReadLine();
        }


    }

    /*A palindromic number reads the same both ways. The largest palindrome made
   from the product of two 2-digit numbers is 9009 = 91 × 99.

   Find the largest palindrome made from the product of two 3-digit numbers.*/
    class Four
    {
        delegate string TestDel1(string s);
        delegate string TestDel2();
        public Four()
        {
            string _s = String.Empty;
            for (int i = 100; i < 1000; i++)
            {
                for (int j = 100; j < 1000; j++)
                {
                    int _x = i * j;
                    char[] _arr = _x.ToString().ToCharArray();
                    Array.Reverse(_arr);
                    string _xs = new string(_arr);
                    if (_x.ToString().Equals(_xs))
                    {
                        _s = _x.ToString();
                    }
                }
            }

            Console.WriteLine("Biggest = " + _s);
            Console.ReadLine();
        }

        void WithoutString()
        {
            int n, r, sum = 0, temp;
            Console.Write("Enter the Number: ");
            n = int.Parse(Console.ReadLine());
            temp = n;
            while (n > 0)
            {
                r = n % 10;
                sum = (sum * 10) + r;
                n = n / 10;
            }
            if (temp == sum)
                Console.Write("Number is Palindrome.");
            else
                Console.Write("Number is not Palindrome");
        }
    }
    /*2520 is the smallest number that can be divided by each of the numbers
   from 1 to 10 without any remainder.

   What is the smallest positive number that is evenly divisible by all of
   the numbers from 1 to 20?*/
    class Five
    {
        public Five()
        {
            int _mul = 0;
            int[] _dividers = new int[] {20,19,18,17,16,15,14,13,12,11};
            for (int _i = 0; _i < _dividers.Length; _i++)
            {
                _mul *= _dividers[_i];
            }
            int _z = 1, _Dn = 0;
            for (int _j = _mul + 1; _j >=20 ; _j--)
            {
                
                for(int _k = 0; _k < _dividers.Length; _k++)
                {
                    _z = _j % _dividers[_k];
                    if (_z == 0)
                    {
                        _Dn = _j;
                    }
                }
            }

            Console.WriteLine("Mul- "+_Dn);
            Console.ReadLine();
        }
    }
    /*The sum of the squares of the first ten natural numbers is,

                          1^2 + 2^2 + ... + 10^2 = 385

   The square of the sum of the first ten natural numbers is,

                       (1 + 2 + ... + 10)^2 = 55^2 = 3025

   Hence the difference between the sum of the squares of the first ten
   natural numbers and the square of the sum is 3025 − 385 = 2640.

   Find the difference between the sum of the squares of the first one
   hundred natural numbers and the square of the sum.*/
    class Six
    {
        int _i, _j;
        public Six()
        {
            
            for(int i = 1; i < 101; i++)
            {
                _i += (i * i);
                _j += i;
            }
            _j = _j * _j;

            Console.WriteLine("FirstHundred="+(_j-_i));
            Console.ReadLine(); //25164150
        }
    }
    /* By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see
            that the 6th prime is 13.What is the 10 001st prime number?*/
    class Seven
    {
        int _count = 0;
        long _verifier = 0;
        long _dn = 0;
        public Seven()
        {
            
            while(_count!=10001)
            {
                for(long i = 1; i < long.MaxValue; i++)
                {
                    for(long j = 1; j < i; j++)
                    {
                        if(i!=1||j!=1)
                        {
                            _verifier = i % j;
                        }
                        if (_verifier == 0)
                        {
                            break;
                        }
                        else
                        {
                            _count++;
                            _dn = i;
                        }
                    }
                    
                }
            }
            Console.WriteLine("LMV="+_dn);
        }
    }


}
